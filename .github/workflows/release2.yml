# build.yml forked from github.com/Fangliding/v2rayNG
# thanks @Fangliding @nagi_ly
# github.com/chika0801/v2rayNG

name: Build APK (Specify the commit)

on:
  workflow_dispatch:
    inputs:
      COMMIT_HASH:
        description: "Fill in Xray-core's commit hash or short hash. Default: HEAD~0 (latest commit)."
        required: true
        type: string
        default: 'HEAD~0'
      V2RAYNG_VERSION:
        description: 'v2rayNG version'
        required: true
        type: string
        default: 'HEAD~0'

env:
  ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
  KEYPASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
  KEYSTOREPASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
  SIGNINGKEYBASE64: ${{ secrets.SIGNING_KEY }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout v2rayNG repository
      uses: actions/checkout@v4
      with:
        repository: '2dust/v2rayNG'
        ref: '${{ inputs.V2RAYNG_VERSION }}'

    - name: Checkout AndroidLibXrayLite repository
      uses: actions/checkout@v4
      with:
        repository: '2dust/AndroidLibXrayLite'
        path: 'AndroidLibXrayLite'

    - name: Checkout Xray-core repository
      uses: actions/checkout@v4
      with:
        repository: 'xtls/xray-core'
        path: 'xray-core'
        fetch-depth: '0'

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Get Go version
      run: |
        echo "GO_VERSION=$(curl -s https://raw.githubusercontent.com/actions/go-versions/main/versions-manifest.json | grep -oE '\"version\": \"[0-9]{1}.[0-9]{1,}(.[0-9]{1,})?\"' | head -1 | cut -d':' -f2 | sed 's/ //g; s/\"//g')" >> $GITHUB_ENV

    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: '${{ env.GO_VERSION }}'
        cache: false

    - name: Install gomobile
      run: |
        go install golang.org/x/mobile/cmd/gomobile@latest
        echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

    - name: Setup Android
      uses: android-actions/setup-android@v3

    - name: Get xray short sha
      run: | 
        cd xray-core
        git checkout ${{ inputs.COMMIT_HASH }}
        echo "XRAY_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

    - name: Build dependencies
      run: |
        cd AndroidLibXrayLite
        sed -i "s/v2core.Version())/v2core.Version() + \"@${{ env.XRAY_SHA }}\")/" libv2ray_main.go
        go get github.com/xtls/xray-core@${{ env.XRAY_SHA }}
        gomobile init
        go mod tidy -v
        gomobile bind -v -androidapi 21 -ldflags='-s -w' ./
        cp libv2ray.aar ../V2rayNG/app/libs/

    - name: Build APK
      run: |
        cd V2rayNG
        chmod 777 *
        sed -i 's/org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8/org.gradle.jvmargs=-Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8/' gradle.properties
        ./gradlew assembleRelease

    - name: List APK files
      run: |
        find V2rayNG/app/build/outputs/apk/ -type f -exec du -h {} \;

    - name: Sign APK files
      uses: ilharp/sign-android-release@v1
      with:
        releaseDir: V2rayNG/app/build/outputs/apk/release/
        keyAlias: ${{ env.ALIAS }}
        keyPassword: ${{ env.KEYPASSWORD }}
        keyStorePassword: ${{ env.KEYSTOREPASSWORD }}
        signingKey: ${{ env.SIGNINGKEYBASE64 }}
        buildToolsVersion: 33.0.2

    - name: Upload APK files
      uses: actions/upload-artifact@v4
      with:
        name: v2rayNG_arm64-v8a-signed
        path: V2rayNG/app/build/outputs/apk/release/v2rayNG_*_arm64-v8a-signed.apk

    - name: Upload apk to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: V2rayNG/app/build/outputs/apk/release/v2rayNG_*_arm64-v8a-signed.apk
        file_glob: true
        asset_name: v2rayNG_${{ inputs.V2RAYNG_VERSION }}_${{ inputs.COMMIT_HASH }}.apk
        tag: build-v${{ inputs.V2RAYNG_VERSION }}_${{ inputs.COMMIT_HASH }}-${{ github.run_id }}
        overwrite: true
        body: ${{ github.event.head_commit.message }}
